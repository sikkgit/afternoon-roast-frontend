[{"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/App.js":"1","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/index.js":"2","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/MainContainer/MainContainer.js":"3","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/Header/Header.js":"4","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/Logo/Logo.js":"5","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/DefaultButton/DefaultButton.js":"6","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/NewStoryContainer/NewStoryContainer.js":"7","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/DefaultTextField/DefaultTextField.js":"8","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/Story/Story.js":"9","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/theme.js":"10","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/context/StoriesContext.js":"11","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/utils/constants.js":"12","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/NotFoundContainer/NotFoundContainer.js":"13","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/StoryContainer/StoryContainer.js":"14","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/NewNewsletterContainer/NewNewsletterContainer.js":"15","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/RichTextEditor/RichTextEditor.js":"16","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/DefaultDatePicker/DefaultDatePicker.js":"17","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/context/NewslettersContext.js":"18","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/Newsletter/Newsletter.js":"19","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/Newsletter/StoryCard/StoryCard.js":"20","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/NewsletterContainer/NewsletterContainer.js":"21","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/utils/fetches.js":"22","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/utils/helperFns.js":"23"},{"size":2483,"mtime":1606603720498,"results":"24","hashOfConfig":"25"},{"size":419,"mtime":1606451534881,"results":"26","hashOfConfig":"25"},{"size":2646,"mtime":1606602952409,"results":"27","hashOfConfig":"25"},{"size":419,"mtime":1606603026055,"results":"28","hashOfConfig":"25"},{"size":258,"mtime":1606413723667,"results":"29","hashOfConfig":"25"},{"size":360,"mtime":1606537644355,"results":"30","hashOfConfig":"25"},{"size":2727,"mtime":1606599534074,"results":"31","hashOfConfig":"25"},{"size":338,"mtime":1606426870310,"results":"32","hashOfConfig":"25"},{"size":3995,"mtime":1606589342757,"results":"33","hashOfConfig":"25"},{"size":199,"mtime":1606418462866,"results":"34","hashOfConfig":"25"},{"size":329,"mtime":1606451501101,"results":"35","hashOfConfig":"25"},{"size":87,"mtime":1606603396529,"results":"36","hashOfConfig":"25"},{"size":312,"mtime":1606603325529,"results":"37","hashOfConfig":"25"},{"size":1592,"mtime":1606603383757,"results":"38","hashOfConfig":"25"},{"size":5043,"mtime":1606598614123,"results":"39","hashOfConfig":"25"},{"size":1201,"mtime":1606523000764,"results":"40","hashOfConfig":"25"},{"size":439,"mtime":1606599159046,"results":"41","hashOfConfig":"25"},{"size":361,"mtime":1606524489785,"results":"42","hashOfConfig":"25"},{"size":1036,"mtime":1606587905868,"results":"43","hashOfConfig":"25"},{"size":1355,"mtime":1606603147429,"results":"44","hashOfConfig":"25"},{"size":1714,"mtime":1606599798881,"results":"45","hashOfConfig":"25"},{"size":2362,"mtime":1606595354545,"results":"46","hashOfConfig":"25"},{"size":228,"mtime":1606599985004,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1f66a8n",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/App.js",["102","103"],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/index.js",[],["104","105"],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/MainContainer/MainContainer.js",["106","107"],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/Header/Header.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/Logo/Logo.js",[],["108","109"],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/DefaultButton/DefaultButton.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/NewStoryContainer/NewStoryContainer.js",["110"],"import React, { useContext, useEffect, useState } from \"react\";\nimport RichTextEditor from \"../RichTextEditor/RichTextEditor\";\nimport DefaultTextField from \"../DefaultTextField/DefaultTextField\";\nimport DefaultButton from \"../DefaultButton/DefaultButton\";\nimport Story from \"../Story/Story\";\nimport { StoriesContext } from \"../../context/StoriesContext\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { fetchStory, postStory, editStory } from \"../../utils/fetches\";\n\nexport default function NewStoryContainer(props) {\n  const [content, setContent] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [tag, setTag] = useState(\"\");\n  const [formVisible, setFormVisible] = useState(true);\n  const [stories, setStories] = useContext(StoriesContext);\n  const history = useHistory();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (props.edit) {\n      fetchStory(id).then((data) => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          const {\n            title,\n            html: content,\n            tag: { name: tag },\n          } = data;\n\n          setTitle(title);\n          setContent(content);\n          setTag(tag);\n        }\n      });\n    }\n  }, [id, props.edit]);\n\n  const handleTitleChange = (e) => setTitle(e.target.value);\n  const handleTagChange = (e) => setTag(e.target.value);\n  const handlePreviewClick = () => setFormVisible(false);\n\n  const handleStorySubmit = async () => {\n    const story = {\n      title,\n      html: content,\n      tag,\n    };\n\n    let data = await (props.edit ? editStory(id, story) : postStory(story));\n\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      if (props.edit) {\n        setStories((prevStories) =>\n          prevStories.map((s) => {\n            return s.id === parseInt(id) ? data : s;\n          })\n        );\n      } else {\n        setStories((prevStories) => [data, ...prevStories]);\n      }\n    }\n\n    history.push(\"/stories/\" + data.id);\n  };\n\n  const articleForm = (\n    <form noValidate autoComplete=\"off\">\n      <DefaultTextField\n        label=\"Title\"\n        value={title}\n        onChange={handleTitleChange}\n      />\n      <br />\n      <DefaultTextField label=\"Tag\" value={tag} onChange={handleTagChange} />\n      <RichTextEditor value={content} setStateCallback={setContent} />\n      <DefaultButton text=\"Preview\" onClick={handlePreviewClick} />\n    </form>\n  );\n\n  const preview = (\n    <div>\n      <Story {...{ title, tag, content }} />\n      <DefaultButton text=\"Edit\" onClick={() => setFormVisible(true)} />{\" \"}\n      <DefaultButton text=\"Submit\" onClick={handleStorySubmit} />\n    </div>\n  );\n\n  return <section>{formVisible ? articleForm : preview}</section>;\n}\n",["111","112"],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/DefaultTextField/DefaultTextField.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/Story/Story.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/theme.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/context/StoriesContext.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/utils/constants.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/NotFoundContainer/NotFoundContainer.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/StoryContainer/StoryContainer.js",["113"],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/NewNewsletterContainer/NewNewsletterContainer.js",["114"],"import { Typography } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { NewslettersContext } from \"../../context/NewslettersContext\";\nimport { StoriesContext } from \"../../context/StoriesContext\";\nimport DefaultButton from \"../DefaultButton/DefaultButton\";\nimport DefaultDatePicker from \"../DefaultDatePicker/DefaultDatePicker\";\nimport DefaultTextField from \"../DefaultTextField/DefaultTextField\";\nimport Newsletter from \"../Newsletter/Newsletter\";\nimport RichTextEditor from \"../RichTextEditor/RichTextEditor\";\nimport { renderToString } from \"react-dom/server\";\nimport { postNewsletter } from \"../../utils/fetches\";\n\nexport default function NewNewsletterContainer() {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [formVisible, setFormVisible] = useState(true);\n  const [newsletters, setNewsletters] = useContext(NewslettersContext);\n  const [stories, setStories] = useContext(StoriesContext);\n  const [existingNewsletter, setExistingNewsletter] = useState(null);\n  const [storiesToPublish, setStoriesToPublish] = useState([]);\n  const [disableSubmit, setDisableSubmit] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    let newsletterFound;\n    let storiesFound;\n\n    if (newsletters) {\n      newsletterFound = newsletters.find((n) => n.formatted_date === date);\n      setExistingNewsletter(newsletterFound);\n    }\n\n    if (stories) {\n      storiesFound = stories.filter((s) => s.formatted_date === date);\n      setStoriesToPublish(storiesFound);\n    }\n\n    if (newsletterFound || (storiesFound && !storiesFound.length)) {\n      setDisableSubmit(true);\n    } else {\n      setDisableSubmit(false);\n    }\n  }, [date, setDisableSubmit, newsletters, stories]);\n\n  const handleTitleChange = (e) => setTitle(e.target.value);\n  const handlePreviewClick = () => setFormVisible(false);\n  const handleDateChange = (e) => {\n    const dateSelected = e.target.value;\n    setDate(dateSelected);\n  };\n\n  const errorMessage = existingNewsletter && (\n    <>\n      <Typography variant=\"body2\" color=\"primary\">\n        A newsletter with that issue date already exists:\n      </Typography>\n      <Link to={`/newsletters/${existingNewsletter.id}`}>\n        {existingNewsletter.title}\n      </Link>\n    </>\n  );\n\n  const getStoriesLinks = () => {\n    if (date) {\n      if (storiesToPublish.length) {\n        return (\n          <>\n            <Typography variant=\"body2\" color=\"primary\">\n              This issue will include the following stories:\n            </Typography>\n\n            {storiesToPublish.map(({ id, title }) => (\n              <Typography variant=\"body2\" color=\"inherit\" key={id}>\n                <li>\n                  <Link to={`/stories/${id}`} target=\"_blank\">\n                    {title}\n                  </Link>\n                </li>\n              </Typography>\n            ))}\n          </>\n        );\n      } else {\n        return (\n          <Typography variant=\"body2\" color=\"primary\">\n            No stories have been written yet for selected date.\n          </Typography>\n        );\n      }\n    }\n  };\n\n  const newsletterForm = (\n    <form noValidate autoComplete=\"off\">\n      <DefaultTextField\n        label=\"Enter Newsletter Title\"\n        value={title}\n        onChange={handleTitleChange}\n      />\n      <br />\n      <DefaultDatePicker\n        label=\"Select Issue Date\"\n        onChange={handleDateChange}\n        defaultValue={date}\n      />\n      <br />\n      <br />\n      <label>\n        <Typography\n          variant=\"body2\"\n          style={{ textAlign: \"left\", marginLeft: 15 }}\n        >\n          Enter Description:\n        </Typography>\n\n        <RichTextEditor\n          value={description}\n          setStateCallback={setDescription}\n          size={200}\n        />\n      </label>\n\n      <div style={{ marginBottom: 10 }}>\n        {existingNewsletter ? errorMessage : getStoriesLinks()}\n      </div>\n\n      <DefaultButton\n        text=\"Preview\"\n        onClick={handlePreviewClick}\n        disabled={disableSubmit}\n      />\n    </form>\n  );\n\n  const assembledNewsletter = (\n    <Newsletter {...{ title, description, date, storiesToPublish }} />\n  );\n\n  const handleNewsletterSubmit = async () => {\n    const newNewsletter = {\n      title,\n      description,\n      stories: storiesToPublish,\n      html: renderToString(assembledNewsletter),\n    };\n\n    const data = await postNewsletter(newNewsletter);\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      setNewsletters((prevNewsletters) => [data, ...prevNewsletters]);\n    }\n\n    history.push(\"/newsletters/\" + data.id);\n  };\n\n  const preview = (\n    <div>\n      {assembledNewsletter}\n      <DefaultButton text=\"Edit\" onClick={() => setFormVisible(true)} />{\" \"}\n      <DefaultButton text=\"Submit\" onClick={handleNewsletterSubmit} />\n    </div>\n  );\n\n  return <section>{formVisible ? newsletterForm : preview}</section>;\n}\n","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/RichTextEditor/RichTextEditor.js",["115"],"import React from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport sanitizeHtml from \"sanitize-html\";\n\nexport default function RichTextEditor({ value, setStateCallback, size }) {\n  const handleEditorChange = (content) => {\n    const sanitizedHtml = sanitizeHtml(content, {\n      allowedTags: false,\n      allowedAttributes: false,\n    });\n    setStateCallback(sanitizedHtml);\n  };\n\n  return (\n    <section style={{ margin: 15 }}>\n      <Editor\n        {...{\n          apiKey: process.env.REACT_APP_TINY_MCE_KEY,\n          initialValue: value,\n          init: {\n            height: size || 300,\n            menubar: false,\n            plugins: [\n              \"advlist autolink lists link image charmap print preview anchor\",\n              \"searchreplace visualblocks code fullscreen\",\n              \"insertdatetime media table paste code help wordcount\",\n            ],\n            toolbar:\n              \"undo redo | formatselect | bold italic backcolor | \\\n          alignleft aligncenter alignright alignjustify | \\\n          bullist numlist outdent indent | removeformat | help\",\n          },\n          onEditorChange: handleEditorChange,\n        }}\n      />\n    </section>\n  );\n}\n",["116","117"],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/DefaultDatePicker/DefaultDatePicker.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/context/NewslettersContext.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/Newsletter/Newsletter.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/Newsletter/StoryCard/StoryCard.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/components/NewsletterContainer/NewsletterContainer.js",["118"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { NewslettersContext } from \"../../context/NewslettersContext\";\nimport { fetchNewsletter, deleteNewsletter } from \"../../utils/fetches\";\nimport DefaultButton from \"../DefaultButton/DefaultButton\";\nimport Newsletter from \"../Newsletter/Newsletter\";\n\nexport default function NewsletterContainer() {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [newsletter, setNewsletter] = useState(null);\n  const [newsletters, setNewsletters] = useContext(NewslettersContext);\n\n  useEffect(() => {\n    fetchNewsletter(id).then((data) => {\n      if (data) {\n        data.error ? console.log(data.error) : setNewsletter(data);\n      }\n    });\n  }, [setNewsletter, id]);\n\n  const displayNewsletter = () => {\n    if (newsletter) {\n      const {\n        title,\n        description,\n        formatted_date: date,\n        stories: storiesToPublish,\n      } = newsletter;\n\n      return <Newsletter {...{ title, description, date, storiesToPublish }} />;\n    }\n  };\n\n  const handleDelete = async () => {\n    if (\n      window.confirm(\n        \"Are you sure you want to permanently delete this newsletter?\"\n      )\n    ) {\n      const data = await deleteNewsletter(id);\n      if (data) {\n        data.error\n          ? console.log(data.error)\n          : setNewsletters((prevNewsletters) =>\n              prevNewsletters.filter((n) => n.id !== parseInt(id))\n            );\n      }\n\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <section style={{ textAlign: \"right\" }}>\n      <DefaultButton text=\"Delete\" onClick={handleDelete} />\n      {displayNewsletter()}\n    </section>\n  );\n}\n","/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/utils/fetches.js",[],"/Users/anhvuong/Desktop/Code/afternoon-roast-frontend/src/utils/helperFns.js",[],{"ruleId":"119","severity":1,"message":"120","line":30,"column":10,"nodeType":"121","messageId":"122","endLine":30,"endColumn":17},{"ruleId":"119","severity":1,"message":"123","line":31,"column":10,"nodeType":"121","messageId":"122","endLine":31,"endColumn":21},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"119","severity":1,"message":"128","line":24,"column":23,"nodeType":"121","messageId":"122","endLine":24,"endColumn":37},{"ruleId":"119","severity":1,"message":"129","line":25,"column":19,"nodeType":"121","messageId":"122","endLine":25,"endColumn":29},{"ruleId":"124","replacedBy":"130"},{"ruleId":"126","replacedBy":"131"},{"ruleId":"119","severity":1,"message":"120","line":15,"column":10,"nodeType":"121","messageId":"122","endLine":15,"endColumn":17},{"ruleId":"124","replacedBy":"132"},{"ruleId":"126","replacedBy":"133"},{"ruleId":"119","severity":1,"message":"120","line":13,"column":10,"nodeType":"121","messageId":"122","endLine":13,"endColumn":17},{"ruleId":"119","severity":1,"message":"129","line":20,"column":19,"nodeType":"121","messageId":"122","endLine":20,"endColumn":29},{"ruleId":"134","severity":1,"message":"135","line":29,"column":15,"nodeType":"136","messageId":"137","endLine":31,"endColumn":64},{"ruleId":"124","replacedBy":"138"},{"ruleId":"126","replacedBy":"139"},{"ruleId":"119","severity":1,"message":"123","line":13,"column":10,"nodeType":"121","messageId":"122","endLine":13,"endColumn":21},"no-unused-vars","'stories' is assigned a value but never used.","Identifier","unusedVar","'newsletters' is assigned a value but never used.","no-native-reassign",["140"],"no-negated-in-lhs",["141"],"'setNewsletters' is assigned a value but never used.","'setStories' is assigned a value but never used.",["140"],["141"],["140"],["141"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString",["140"],["141"],"no-global-assign","no-unsafe-negation"]